/*
 * Styles that affect the overall layout. Since Technote is built on
 * sphinx-basic-ng as the base theme, these styles primarily work with
 * the base theme's sb- classes.
 *
 * This builds on the skeleton.css from sphinx-basic-ng.
 * https://github.com/pradyunsg/sphinx-basic-ng/blob/main/src/sphinx_basic_ng/theme/basic-ng/static/skeleton.css
 *
 */

html {
  height: 100%;
}

body {
  margin: 0;
  min-height: 100%;
}

/* Basic reset for the full-width banners */
.technote-announcement-container,
.technote-banner-container,
.technote-footer-container {
  width: 100%;
  padding: 0;
  margin: 0;
}

.technote-container {
  display: grid;
  grid-template-columns: 1fr;
  width: 100%;
  padding: var(--tn-layout-container-padding);
  gap: 2em 2em;
}

.technote-article-container {
  /* Make the technote container a queryable container */
  container-type: inline-size;
  container-name: technote-article;
}

/* Contents outline (mobile) */
.technote-outline-container {
  position: fixed;
  background: var(--tn-component-text-background-color);
  top: 0;
  left: 0;
  width: 100%;
  height: 0%;
  opacity: 0;
  visibility: hidden;
  transition:
    opacity 0.3s,
    visibility 0.3s,
    height 0s;

  &.technote-outline-container--visible {
    opacity: 0.98;
    visibility: visible;
    backdrop-filter: blur(10px);
    padding: 1em;
    z-index: 10;

    display: flex;
    align-items: center; /* Vertically centers the content */
    height: 100vh;
    transition:
      opacity 0s,
      visibility 0s,
      height 0s;
  }
}

.technote-contents-toggle-container {
  --height: 3em;
  position: fixed;
  height: var(--height);
  top: calc(100vh - var(--height));
  width: 100vw;
  z-index: 100;
}

.technote-contents-toggle {
  --border-width: 2px;
  display: block;
  margin-left: auto;
  margin-bottom: 10px;
  margin-right: 1em;
  text-align: center;
  font-size: 1.4rem;
  cursor: pointer;
  border-radius: 0.5em;
  padding: 3px 5px;
  border: var(--border-width) solid transparent;
  box-shadow: var(--shadow-elevation-medium);

  &:hover {
    box-shadow: var(--shadow-elevation-high);
  }
}

@media screen and (max-width: 768px) {
  figure.technote-table:has(.technote-wide-content),
  .technote-wide-content {
    margin-right: 0;
    overflow-x: auto;
    max-width: 100%;
    /* Getting reliable overflow scroll in the mobile view is reliable
     * when a specific width is set on the container.
     */
    width: calc(100vw - 2 * var(--tn-layout-container-padding));
  }

  .technote-wide-content img,
  img.technote-wide-content,
  .technote-wide-content.figure img,
  .technote-table:has(.technote-wide-content),
  table.technote-wide-content {
    max-width: 100%;
  }
}

/* Desktop layout */
@media screen and (min-width: 768px) {
  .technote-container {
    grid-template-columns: var(--tn-sidebar-width) 1fr;
    grid-template-rows: auto 1fr;
    height: 100vh; /* Full height to allow for sticky sidebar */
  }

  .technote-logo-container {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
  }

  .technote-outline-container {
    grid-column: 1 / 2;
    grid-row: 2 / 3;
    position: relative;
    opacity: 1;
    visibility: visible;
    /* to let the outline scroll independently */
    height: 100%;
    overflow-y: auto;
  }

  .technote-article-container {
    grid-column: 2 / 3;
    grid-row: 1 / 3;

    /* This padding to the left allows space for the block elements (e.g.
       admonitions and code blocks) to have their borders extend to the left.
       This allows the text content of the block to line up with the body.
     */
    padding-left: calc(
      var(--tn-sphinx-block-padding-x) + var(--tn-sphinx-block-border-thickness)
    );

    /* Allow overflow because .technote-container is full height */
    overflow-y: auto;

    /* Create a grid within article to constrain content but allow
       full-bleed blocks.
     */
    display: grid;
    /* The content width is re-used when calculating the negative-margin
       and max-width for the full-bleed blocks.
     */
    --tn-content-width: calc(min(100%, var(--tn-content-max-width)));
    grid-template-columns: var(--tn-content-width) 1fr;
  }

  /* Constrain content to a readable column. */
  .technote-article-container > * {
    grid-column: 1 / 2;
  }

  /* Full-bleed blocks
   *
   * When a table is marked with a table-wide-content rst-class, that class
   * actually applies to the table inside the figure, but we need the entire
   * figure to to be full bleed. The :has selector lets us select the
   * figure that contains a table.technote-wide-content.
   */
  figure.technote-table:has(.technote-wide-content),
  .technote-wide-content {
    /* This negative margin extends the container for wide content out by the
       width of the right whitespace. This is calculated as the viewport
       width that's left over after removing the widths of the left sidebar,
       the grid column gap, the main content column width, and the padding.
     */
    margin-right: calc(
      -100vw + var(--tn-sidebar-width) + var(--tn-layout-column-gap) + var(
          --tn-content-width
        ) + 2 * var(--tn-layout-container-padding) + var(
          --tn-sphinx-block-padding-x
        ) + var(--tn-sphinx-block-border-thickness)
    );
  }

  figure.technote-table:has(.technote-wide-content) {
    /* Allow tables that are wider than the viewport to scroll.

      Only tables use this rule; not code-blocks. The .highlight class
      already provides overflow-x.
    */
    overflow-x: auto;
  }

  /* Reset the max-width for full-bleed images. Normally they're 100% of the container. */
  .technote-wide-content img,
  img.technote-wide-content,
  .technote-wide-content.figure img,
  .technote-table:has(.technote-wide-content),
  table.technote-wide-content {
    max-width: calc(
      100vw - var(--tn-sidebar-width) - var(--tn-layout-column-gap) - var(
          --tn-layout-container-padding
        )
    );
  }

  /* The contents toggle button isn't available on desktop. */
  .technote-contents-toggle-container {
    visibility: hidden;
  }
}

@media screen and (min-width: 1024px) {
  .technote-container {
    // grid-template-columns: 30ch 72ch;
    column-gap: 4em;
  }
}
